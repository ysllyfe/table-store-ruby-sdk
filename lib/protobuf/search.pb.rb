### Generated by rprotoc. DO NOT EDIT!
### <proto file: search.proto>
# enum QueryType {
#     MATCH_QUERY = 1;
#     MATCH_PHRASE_QUERY = 2;
#     TERM_QUERY = 3;
#     RANGE_QUERY = 4;
#     PREFIX_QUERY = 5;
#     BOOL_QUERY = 6;
#     CONST_SCORE_QUERY = 7;
#     FUNCTION_SCORE_QUERY = 8;
#     NESTED_QUERY = 9;
#     WILDCARD_QUERY = 10;
#     MATCH_ALL_QUERY = 11;
#     GEO_BOUNDING_BOX_QUERY = 12;
#     GEO_DISTANCE_QUERY = 13;
#     GEO_POLYGON_QUERY = 14;
#     TERMS_QUERY = 15;
#     EXISTS_QUERY = 16;
# }
#
# enum QueryOperator {
#     OR = 1;
#     AND = 2;
# }
#
# message MatchQuery {
#     optional string field_name = 1;
#     optional string text = 2;
#     optional int32 minimum_should_match = 3;
#     optional QueryOperator operator = 4;
# }
#
# message MatchPhraseQuery {
#     optional string field_name = 1;
#     optional string text = 2;
# }
#
# message MatchAllQuery {
# }
#
# message TermQuery {
#     optional string field_name = 1;
#     optional bytes term = 2;
# }
#
# message TermsQuery {
#     optional string field_name = 1;
#     repeated bytes terms = 2;
# }
#
# message RangeQuery {
#     optional string field_name = 1;
#     optional bytes range_from = 2;  // variant value
#     optional bytes range_to = 3; // variant value
#     optional bool include_lower = 4;
#     optional bool include_upper = 5;
# }
#
# message PrefixQuery {
#     optional string field_name = 1;
#     optional string prefix = 2;
# }
#
# message WildcardQuery {
#     optional string field_name = 1;
#     optional string value = 2;
# }
#
# message BoolQuery {
#     repeated Query must_queries = 1;
#     repeated Query must_not_queries = 2;
#     repeated Query filter_queries = 3;
#     repeated Query should_queries = 4;
#     optional int32 minimum_should_match = 5;
# }
#
# message ConstScoreQuery {
#     optional Query filter = 1;
# }
#
# message FieldValueFactor {
#     optional string field_name = 1;
# }
#
# message FunctionScoreQuery {
#     optional Query query = 1;
#     optional FieldValueFactor field_value_factor = 2;
# }
#
# enum ScoreMode {
#     SCORE_MODE_NONE = 1;
#     SCORE_MODE_AVG = 2;
#     SCORE_MODE_MAX = 3;
#     SCORE_MODE_TOTAL = 4;
#     SCORE_MODE_MIN = 5;
# }
#
# message NestedQuery {
#     optional string path = 1;
#     optional Query query = 2;
#     optional ScoreMode score_mode = 3;
# }
#
# message GeoBoundingBoxQuery {
#     optional string field_name = 1;
#     optional string top_left = 2;
#     optional string bottom_right = 3;
# }
#
# message GeoDistanceQuery {
#     optional string field_name = 1;
#     optional string center_point = 2;
#     optional double distance = 3;
# }
#
# message GeoPolygonQuery {
#     optional string field_name = 1;
#     repeated string points = 2;
# }
#
# message ExistsQuery {
#     optional string field_name = 1;
# }
#
# message Query {
#     optional QueryType type = 1;
#     optional bytes query = 2;
# }
#
# message Collapse {
#     optional string field_name = 1;
# }
#
# message NestedFilter {
#     optional string path = 1;
#     optional Query filter = 2;
# }
#
# enum SortOrder {
#     SORT_ORDER_ASC = 0;
#     SORT_ORDER_DESC = 1;
# }
#
# enum SortMode {
#     SORT_MODE_MIN = 0;
#     SORT_MODE_MAX = 1;
#     SORT_MODE_AVG = 2;
# }
#
# message ScoreSort {
#     optional SortOrder order = 1;
# }
#
# message FieldSort {
#     optional string field_name = 1;
#     optional SortOrder order = 2;
#     optional SortMode mode = 3;
#     optional NestedFilter nested_filter = 4;
# }
#
# enum GeoDistanceType {
#     GEO_DISTANCE_ARC = 0;
#     GEO_DISTANCE_PLANE = 1;
# }
#
# message GeoDistanceSort {
#     optional string field_name = 1;
#     repeated string points = 2;
#     optional SortOrder order = 3;
#     optional SortMode mode = 4;
#     optional GeoDistanceType distance_type = 5;
#     optional NestedFilter nested_filter = 6;
# }
#
# message PrimaryKeySort {
#     optional SortOrder order = 1;
# }
#
# message Sorter {
#     optional FieldSort field_sort = 1;
#     optional GeoDistanceSort geo_distance_sort = 2;
#     optional ScoreSort score_sort = 3;
#     optional PrimaryKeySort pk_sort = 4;
# }
#
# message Sort {
#     repeated Sorter sorter = 1;
# }
#
# message SearchQuery {
#     optional int32 offset = 1;
#     optional int32 limit = 2;
#     optional Query query = 4;
#     optional Collapse collapse = 5;
#     optional Sort sort = 6;
#     optional bool getTotalCount = 8;
#     optional bytes token = 9;
#     optional Aggregations aggs = 10;
#     optional GroupBys group_bys = 11;
# }
#
# enum ColumnReturnType {
#     RETURN_ALL = 1;
#     RETURN_SPECIFIED = 2;
#     RETURN_NONE = 3;
# }
#
# message ColumnsToGet {
#     optional ColumnReturnType return_type = 1;
#     repeated string column_names = 2;
# }
#
# message SearchRequest {
#     optional string table_name = 1;
#     optional string index_name = 2;
#     optional ColumnsToGet columns_to_get = 3;
#     optional bytes search_query = 4;
#     repeated bytes routing_values = 5;
# }
#
# /**
#  * Response部分：
#  **/
#
# message SearchResponse {
#     optional int64 total_hits = 1;
#     repeated bytes rows = 2;
#     optional bool is_all_succeeded = 3;
#     optional bytes next_token = 6;
#     optional bytes aggs = 7;
#     optional bytes group_bys = 8;
# }
#
# /* Create Search Index */
#
# enum IndexOptions {
#     DOCS = 1;
#     FREQS = 2;
#     POSITIONS = 3;
#     OFFSETS = 4;
# }
#
# enum FieldType {
#     LONG = 1;
#     DOUBLE = 2;
#     BOOLEAN = 3;
#     KEYWORD = 4;
#     TEXT = 5;
#     NESTED = 6;
#     GEO_POINT = 7;
# }
#
# message SingleWordAnalyzerParameter {
#     optional bool case_sensitive = 1;
#     optional bool delimit_word = 2;
# }
#
# message SplitAnalyzerParameter {
#     optional string delimiter = 1;
# }
#
# message FuzzyAnalyzerParameter {
#     optional int32 min_chars = 1;
#     optional int32 max_chars = 2;
# }
#
# message FieldSchema {
#     optional string field_name = 1;
#     optional FieldType field_type = 2;
#     optional IndexOptions index_options = 3;
#     optional string analyzer = 4;
#     optional bool index = 5;
#     optional bool sort_and_agg = 6;
#     optional bool store = 7;
#     repeated FieldSchema field_schemas = 8; // only for nested type
#     optional bool is_array = 9;
#     optional bytes analyzer_parameter = 10;
# }
#
# message IndexSchema {
#     repeated FieldSchema field_schemas = 1;
#     optional IndexSetting index_setting = 2;
#     optional Sort index_sort = 3;
# }
#
# message IndexSetting {
#     optional int32 number_of_shards = 1;
#     repeated string routing_fields = 2;
#     optional int32 routing_partition_size = 3;
# }
#
# message CreateSearchIndexRequest {
#     required string table_name = 1;
#     required string index_name = 2;
#     optional IndexSchema schema = 3;
# }
#
# message CreateSearchIndexResponse {
# }
#
# /* List Search Index */
#
# message IndexInfo {
#     optional string table_name = 1;
#     optional string index_name = 2;
# }
#
# message ListSearchIndexRequest {
#     optional string table_name = 1;
# }
# message ListSearchIndexResponse {
#     repeated IndexInfo indices = 1;
# }
#
# /* Delete Search Index */
#
# message DeleteSearchIndexRequest {
#     optional string table_name = 1;
#     optional string index_name = 2;
# }
#
# message DeleteSearchIndexResponse {
# }
#
# /* Describe Search Index */
#
# enum SyncPhase {
#     FULL = 1;
#     INCR = 2;
# }
#
# message SyncStat {
#     optional SyncPhase sync_phase = 1;
#     optional int64 current_sync_timestamp = 2; // 同步进度，参考TunnelService。
# }
#
# message DescribeSearchIndexRequest {
#     optional string table_name = 1;
#     optional string index_name = 2;
# }
#
# message DescribeSearchIndexResponse {
#     optional IndexSchema schema = 1;
#     optional SyncStat sync_stat = 2;
# }
#
#
# /* aggregation & group by */
# enum AggregationType {
#     AGG_AVG = 1;
#     AGG_DISTINCT_COUNT = 6;
#     AGG_MAX = 2;
#     AGG_MIN = 3;
#     AGG_SUM = 4;
#     AGG_COUNT = 5;
# }
#
# enum GroupByType {
#     GROUP_BY_FIELD = 1;
#     GROUP_BY_RANGE = 2;
#     GROUP_BY_FILTER = 3;
#     GROUP_BY_GEO_DISTANCE = 4;
# }
#
# // agg & group by
# message Aggregation {
#     optional string name = 1;
#     optional AggregationType type = 2;
#     optional bytes body = 3;
# }
# message Aggregations {
#     repeated Aggregation aggs = 1;
# }
#
# message GroupBy {
#     optional string name = 1;
#     optional GroupByType type = 2;
#     optional bytes body = 3;
# }
# message GroupBys {
#     repeated GroupBy group_bys = 1;
# }
#
# // single agg
# message AvgAggregation {
#     optional string field_name = 1;
#     optional bytes missing = 2; //encoded as SQLVariant, check in SearchProxy
# }
#
# message MaxAggregation {
#     optional string field_name = 1;
#     optional bytes missing = 2;
# }
#
# message MinAggregation {
#     optional string field_name = 1;
#     optional bytes missing = 2;
# }
#
# message SumAggregation {
#     optional string field_name = 1;
#     optional bytes missing = 2;
# }
#
# message CountAggregation {
#     optional string field_name = 1;
# }
#
# message DistinctCountAggregation {
#     optional string field_name = 1;
#     optional bytes missing = 2;
# }
#
# // group agg
# message GroupKeySort {
#     optional SortOrder order = 1;
# }
#
# message RowCountSort {
#     optional SortOrder order = 1;
# }
#
# message SubAggSort {
#     optional string sub_agg_name = 1;
#     optional SortOrder order = 2;
# }
#
# message GroupBySorter {
#     optional GroupKeySort group_key_sort = 1;
#     optional RowCountSort row_count_sort = 2;
#     optional SubAggSort sub_agg_sort = 3;
# }
#
# message GroupBySort {
#     repeated GroupBySorter sorters = 1;
# }
#
# message GroupByField {
#     optional string field_name = 1;
#     optional int32 size = 2;
#     optional GroupBySort sort = 3;
#     optional Aggregations sub_aggs = 4;
#     optional GroupBys sub_group_bys = 5;
# }
#
#
#
# message GroupByRange {
#     optional string field_name = 1;
#     repeated Range ranges = 2;
#     optional Aggregations sub_aggs = 3;
#     optional GroupBys sub_group_bys = 4;
# }
#
# message GroupByFilter {
#     repeated Query filters = 1;
#     optional Aggregations sub_aggs = 2;
#     optional GroupBys sub_group_bys = 3;
# }
#
# message GeoPoint {
#     optional double lat = 1;
#     optional double lon = 2;
# }
#
# message GroupByGeoDistance {
#     optional string field_name = 1;
#     optional GeoPoint origin = 2;
#     repeated Range ranges = 3;
#     optional Aggregations sub_aggs = 4;
#     optional GroupBys sub_group_bys = 5;
# }
#
# //single agg result
# message AvgAggregationResult {
#     optional double value = 1;
# }
#
# message DistinctCountAggregationResult {
#     optional int64 value = 1;
# }
#
# message MaxAggregationResult {
#     optional double value = 1;
# }
#
# message MinAggregationResult {
#     optional double value = 1;
# }
#
# message SumAggregationResult {
#     optional double value = 1;
# }
#
# message CountAggregationResult {
#     optional int64 value = 1;
# }
#
# message AggregationResult {
#     optional string name = 1;
#     optional AggregationType type = 2;
#     optional bytes agg_result = 3; // encoded by XxxAggregationResult
# }
#
# message AggregationsResult {
#     repeated AggregationResult agg_results = 1;
# }
#
# //group by result
# message GroupByFieldResultItem {
#     optional string key = 1;
#     optional int64 row_count = 2;
#     optional AggregationsResult sub_aggs_result = 3;
#     optional GroupBysResult sub_group_bys_result = 4;
# }
# message GroupByFieldResult {
#     repeated GroupByFieldResultItem group_by_field_result_items = 1;
# }
#
# message GroupByRangeResultItem {
#     optional double from = 1;
#     optional double to = 2;
#     optional int64 row_count = 3;
#     optional AggregationsResult sub_aggs_result = 4;
#     optional GroupBysResult sub_group_bys_result = 5;
# }
# message GroupByRangeResult {
#     repeated GroupByRangeResultItem group_by_range_result_items = 1;
# }
#
# message GroupByGeoDistanceResultItem {
#     optional double from = 1;
#     optional double to = 2;
#     optional int64 row_count = 3;
#     optional AggregationsResult sub_aggs_result = 4;
#     optional GroupBysResult sub_group_bys_result = 5;
# }
# message GroupByGeoDistanceResult {
#     repeated GroupByGeoDistanceResultItem group_by_geo_distance_result_items = 1;
# }
#
# message GroupByFilterResultItem {
#     optional int64 row_count = 1;
#     optional AggregationsResult sub_aggs_result = 2;
#     optional GroupBysResult sub_group_bys_result = 3;
# }
# message GroupByFilterResult {
#     repeated GroupByFilterResultItem group_by_filter_result_items = 1;
# }
#
# message GroupByResult {
#     optional string name = 1;
#     optional GroupByType type = 2;
#     optional bytes group_by_result = 3; //encoded by XxxGroupByResult
# }
#
# message GroupBysResult {
#     repeated GroupByResult group_by_results = 1;
# }
require 'protobuf/message/message'
require 'protobuf/message/enum'
require 'protobuf/message/service'
require 'protobuf/message/extend'

class QueryType < ::Protobuf::Enum
  defined_in __FILE__
  MATCH_QUERY = value(:MATCH_QUERY, 1)
  MATCH_PHRASE_QUERY = value(:MATCH_PHRASE_QUERY, 2)
  TERM_QUERY = value(:TERM_QUERY, 3)
  RANGE_QUERY = value(:RANGE_QUERY, 4)
  PREFIX_QUERY = value(:PREFIX_QUERY, 5)
  BOOL_QUERY = value(:BOOL_QUERY, 6)
  CONST_SCORE_QUERY = value(:CONST_SCORE_QUERY, 7)
  FUNCTION_SCORE_QUERY = value(:FUNCTION_SCORE_QUERY, 8)
  NESTED_QUERY = value(:NESTED_QUERY, 9)
  WILDCARD_QUERY = value(:WILDCARD_QUERY, 10)
  MATCH_ALL_QUERY = value(:MATCH_ALL_QUERY, 11)
  GEO_BOUNDING_BOX_QUERY = value(:GEO_BOUNDING_BOX_QUERY, 12)
  GEO_DISTANCE_QUERY = value(:GEO_DISTANCE_QUERY, 13)
  GEO_POLYGON_QUERY = value(:GEO_POLYGON_QUERY, 14)
  TERMS_QUERY = value(:TERMS_QUERY, 15)
  EXISTS_QUERY = value(:EXISTS_QUERY, 16)
end
class QueryOperator < ::Protobuf::Enum
  defined_in __FILE__
  OR = value(:OR, 1)
  AND = value(:AND, 2)
end
class MatchQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :string, :text, 2
  optional :int32, :minimum_should_match, 3
  optional :QueryOperator, :operator, 4
end
class MatchPhraseQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :string, :text, 2
end
class MatchAllQuery < ::Protobuf::Message
  defined_in __FILE__
end
class TermQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :term, 2
end
class TermsQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  repeated :bytes, :terms, 2
end
class RangeQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :range_from, 2
  optional :bytes, :range_to, 3
  optional :bool, :include_lower, 4
  optional :bool, :include_upper, 5
end
class PrefixQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :string, :prefix, 2
end
class WildcardQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :string, :value, 2
end
class BoolQuery < ::Protobuf::Message
  defined_in __FILE__
  repeated :Query, :must_queries, 1
  repeated :Query, :must_not_queries, 2
  repeated :Query, :filter_queries, 3
  repeated :Query, :should_queries, 4
  optional :int32, :minimum_should_match, 5
end
class ConstScoreQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :Query, :filter, 1
end
class FieldValueFactor < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
end
class FunctionScoreQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :Query, :query, 1
  optional :FieldValueFactor, :field_value_factor, 2
end
class ScoreMode < ::Protobuf::Enum
  defined_in __FILE__
  SCORE_MODE_NONE = value(:SCORE_MODE_NONE, 1)
  SCORE_MODE_AVG = value(:SCORE_MODE_AVG, 2)
  SCORE_MODE_MAX = value(:SCORE_MODE_MAX, 3)
  SCORE_MODE_TOTAL = value(:SCORE_MODE_TOTAL, 4)
  SCORE_MODE_MIN = value(:SCORE_MODE_MIN, 5)
end
class NestedQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :path, 1
  optional :Query, :query, 2
  optional :ScoreMode, :score_mode, 3
end
class GeoBoundingBoxQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :string, :top_left, 2
  optional :string, :bottom_right, 3
end
class GeoDistanceQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :string, :center_point, 2
  optional :double, :distance, 3
end
class GeoPolygonQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  repeated :string, :points, 2
end
class ExistsQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
end
class Query < ::Protobuf::Message
  defined_in __FILE__
  optional :QueryType, :type, 1
  optional :bytes, :query, 2
end
class Collapse < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
end
class NestedFilter < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :path, 1
  optional :Query, :filter, 2
end
class SortOrder < ::Protobuf::Enum
  defined_in __FILE__
  SORT_ORDER_ASC = value(:SORT_ORDER_ASC, 0)
  SORT_ORDER_DESC = value(:SORT_ORDER_DESC, 1)
end
class SortMode < ::Protobuf::Enum
  defined_in __FILE__
  SORT_MODE_MIN = value(:SORT_MODE_MIN, 0)
  SORT_MODE_MAX = value(:SORT_MODE_MAX, 1)
  SORT_MODE_AVG = value(:SORT_MODE_AVG, 2)
end
class ScoreSort < ::Protobuf::Message
  defined_in __FILE__
  optional :SortOrder, :order, 1
end
class FieldSort < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :SortOrder, :order, 2
  optional :SortMode, :mode, 3
  optional :NestedFilter, :nested_filter, 4
end
class GeoDistanceType < ::Protobuf::Enum
  defined_in __FILE__
  GEO_DISTANCE_ARC = value(:GEO_DISTANCE_ARC, 0)
  GEO_DISTANCE_PLANE = value(:GEO_DISTANCE_PLANE, 1)
end
class GeoDistanceSort < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  repeated :string, :points, 2
  optional :SortOrder, :order, 3
  optional :SortMode, :mode, 4
  optional :GeoDistanceType, :distance_type, 5
  optional :NestedFilter, :nested_filter, 6
end
class PrimaryKeySort < ::Protobuf::Message
  defined_in __FILE__
  optional :SortOrder, :order, 1
end
class Sorter < ::Protobuf::Message
  defined_in __FILE__
  optional :FieldSort, :field_sort, 1
  optional :GeoDistanceSort, :geo_distance_sort, 2
  optional :ScoreSort, :score_sort, 3
  optional :PrimaryKeySort, :pk_sort, 4
end
class Sort < ::Protobuf::Message
  defined_in __FILE__
  repeated :Sorter, :sorter, 1
end
class SearchQuery < ::Protobuf::Message
  defined_in __FILE__
  optional :int32, :offset, 1
  optional :int32, :limit, 2
  optional :Query, :query, 4
  optional :Collapse, :collapse, 5
  optional :Sort, :sort, 6
  optional :bool, :getTotalCount, 8
  optional :bytes, :token, 9
  optional :Aggregations, :aggs, 10
  optional :GroupBys, :group_bys, 11
end
class ColumnReturnType < ::Protobuf::Enum
  defined_in __FILE__
  RETURN_ALL = value(:RETURN_ALL, 1)
  RETURN_SPECIFIED = value(:RETURN_SPECIFIED, 2)
  RETURN_NONE = value(:RETURN_NONE, 3)
end
class ColumnsToGet < ::Protobuf::Message
  defined_in __FILE__
  optional :ColumnReturnType, :return_type, 1
  repeated :string, :column_names, 2
end
class SearchRequest < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :table_name, 1
  optional :string, :index_name, 2
  optional :ColumnsToGet, :columns_to_get, 3
  optional :bytes, :search_query, 4
  repeated :bytes, :routing_values, 5
end
class SearchResponse < ::Protobuf::Message
  defined_in __FILE__
  optional :int64, :total_hits, 1
  repeated :bytes, :rows, 2
  optional :bool, :is_all_succeeded, 3
  optional :bytes, :next_token, 6
  optional :bytes, :aggs, 7
  optional :bytes, :group_bys, 8
end
class IndexOptions < ::Protobuf::Enum
  defined_in __FILE__
  DOCS = value(:DOCS, 1)
  FREQS = value(:FREQS, 2)
  POSITIONS = value(:POSITIONS, 3)
  OFFSETS = value(:OFFSETS, 4)
end
class FieldType < ::Protobuf::Enum
  defined_in __FILE__
  LONG = value(:LONG, 1)
  DOUBLE = value(:DOUBLE, 2)
  BOOLEAN = value(:BOOLEAN, 3)
  KEYWORD = value(:KEYWORD, 4)
  TEXT = value(:TEXT, 5)
  NESTED = value(:NESTED, 6)
  GEO_POINT = value(:GEO_POINT, 7)
end
class SingleWordAnalyzerParameter < ::Protobuf::Message
  defined_in __FILE__
  optional :bool, :case_sensitive, 1
  optional :bool, :delimit_word, 2
end
class SplitAnalyzerParameter < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :delimiter, 1
end
class FuzzyAnalyzerParameter < ::Protobuf::Message
  defined_in __FILE__
  optional :int32, :min_chars, 1
  optional :int32, :max_chars, 2
end
class FieldSchema < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :FieldType, :field_type, 2
  optional :IndexOptions, :index_options, 3
  optional :string, :analyzer, 4
  optional :bool, :index, 5
  optional :bool, :sort_and_agg, 6
  optional :bool, :store, 7
  repeated :FieldSchema, :field_schemas, 8
  optional :bool, :is_array, 9
  optional :bytes, :analyzer_parameter, 10
end
class IndexSchema < ::Protobuf::Message
  defined_in __FILE__
  repeated :FieldSchema, :field_schemas, 1
  optional :IndexSetting, :index_setting, 2
  optional :Sort, :index_sort, 3
end
class IndexSetting < ::Protobuf::Message
  defined_in __FILE__
  optional :int32, :number_of_shards, 1
  repeated :string, :routing_fields, 2
  optional :int32, :routing_partition_size, 3
end
class CreateSearchIndexRequest < ::Protobuf::Message
  defined_in __FILE__
  required :string, :table_name, 1
  required :string, :index_name, 2
  optional :IndexSchema, :schema, 3
end
class CreateSearchIndexResponse < ::Protobuf::Message
  defined_in __FILE__
end
class IndexInfo < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :table_name, 1
  optional :string, :index_name, 2
end
class ListSearchIndexRequest < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :table_name, 1
end
class ListSearchIndexResponse < ::Protobuf::Message
  defined_in __FILE__
  repeated :IndexInfo, :indices, 1
end
class DeleteSearchIndexRequest < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :table_name, 1
  optional :string, :index_name, 2
end
class DeleteSearchIndexResponse < ::Protobuf::Message
  defined_in __FILE__
end
class SyncPhase < ::Protobuf::Enum
  defined_in __FILE__
  FULL = value(:FULL, 1)
  INCR = value(:INCR, 2)
end
class SyncStat < ::Protobuf::Message
  defined_in __FILE__
  optional :SyncPhase, :sync_phase, 1
  optional :int64, :current_sync_timestamp, 2
end
class DescribeSearchIndexRequest < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :table_name, 1
  optional :string, :index_name, 2
end
class DescribeSearchIndexResponse < ::Protobuf::Message
  defined_in __FILE__
  optional :IndexSchema, :schema, 1
  optional :SyncStat, :sync_stat, 2
end
class AggregationType < ::Protobuf::Enum
  defined_in __FILE__
  AGG_AVG = value(:AGG_AVG, 1)
  AGG_DISTINCT_COUNT = value(:AGG_DISTINCT_COUNT, 6)
  AGG_MAX = value(:AGG_MAX, 2)
  AGG_MIN = value(:AGG_MIN, 3)
  AGG_SUM = value(:AGG_SUM, 4)
  AGG_COUNT = value(:AGG_COUNT, 5)
end
class GroupByType < ::Protobuf::Enum
  defined_in __FILE__
  GROUP_BY_FIELD = value(:GROUP_BY_FIELD, 1)
  GROUP_BY_RANGE = value(:GROUP_BY_RANGE, 2)
  GROUP_BY_FILTER = value(:GROUP_BY_FILTER, 3)
  GROUP_BY_GEO_DISTANCE = value(:GROUP_BY_GEO_DISTANCE, 4)
end
class Aggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :name, 1
  optional :AggregationType, :type, 2
  optional :bytes, :body, 3
end
class Aggregations < ::Protobuf::Message
  defined_in __FILE__
  repeated :Aggregation, :aggs, 1
end
class GroupBy < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :name, 1
  optional :GroupByType, :type, 2
  optional :bytes, :body, 3
end
class GroupBys < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupBy, :group_bys, 1
end
class AvgAggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :missing, 2
end
class MaxAggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :missing, 2
end
class MinAggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :missing, 2
end
class SumAggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :missing, 2
end
class CountAggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
end
class DistinctCountAggregation < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :bytes, :missing, 2
end
class GroupKeySort < ::Protobuf::Message
  defined_in __FILE__
  optional :SortOrder, :order, 1
end
class RowCountSort < ::Protobuf::Message
  defined_in __FILE__
  optional :SortOrder, :order, 1
end
class SubAggSort < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :sub_agg_name, 1
  optional :SortOrder, :order, 2
end
class GroupBySorter < ::Protobuf::Message
  defined_in __FILE__
  optional :GroupKeySort, :group_key_sort, 1
  optional :RowCountSort, :row_count_sort, 2
  optional :SubAggSort, :sub_agg_sort, 3
end
class GroupBySort < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupBySorter, :sorters, 1
end
class GroupByField < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :int32, :size, 2
  optional :GroupBySort, :sort, 3
  optional :Aggregations, :sub_aggs, 4
  optional :GroupBys, :sub_group_bys, 5
end
class GroupByRange < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  repeated :Range, :ranges, 2
  optional :Aggregations, :sub_aggs, 3
  optional :GroupBys, :sub_group_bys, 4
end
class GroupByFilter < ::Protobuf::Message
  defined_in __FILE__
  repeated :Query, :filters, 1
  optional :Aggregations, :sub_aggs, 2
  optional :GroupBys, :sub_group_bys, 3
end
class GeoPoint < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :lat, 1
  optional :double, :lon, 2
end
class GroupByGeoDistance < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :field_name, 1
  optional :GeoPoint, :origin, 2
  repeated :Range, :ranges, 3
  optional :Aggregations, :sub_aggs, 4
  optional :GroupBys, :sub_group_bys, 5
end
class AvgAggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :value, 1
end
class DistinctCountAggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :int64, :value, 1
end
class MaxAggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :value, 1
end
class MinAggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :value, 1
end
class SumAggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :value, 1
end
class CountAggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :int64, :value, 1
end
class AggregationResult < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :name, 1
  optional :AggregationType, :type, 2
  optional :bytes, :agg_result, 3
end
class AggregationsResult < ::Protobuf::Message
  defined_in __FILE__
  repeated :AggregationResult, :agg_results, 1
end
class GroupByFieldResultItem < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :key, 1
  optional :int64, :row_count, 2
  optional :AggregationsResult, :sub_aggs_result, 3
  optional :GroupBysResult, :sub_group_bys_result, 4
end
class GroupByFieldResult < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupByFieldResultItem, :group_by_field_result_items, 1
end
class GroupByRangeResultItem < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :from, 1
  optional :double, :to, 2
  optional :int64, :row_count, 3
  optional :AggregationsResult, :sub_aggs_result, 4
  optional :GroupBysResult, :sub_group_bys_result, 5
end
class GroupByRangeResult < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupByRangeResultItem, :group_by_range_result_items, 1
end
class GroupByGeoDistanceResultItem < ::Protobuf::Message
  defined_in __FILE__
  optional :double, :from, 1
  optional :double, :to, 2
  optional :int64, :row_count, 3
  optional :AggregationsResult, :sub_aggs_result, 4
  optional :GroupBysResult, :sub_group_bys_result, 5
end
class GroupByGeoDistanceResult < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupByGeoDistanceResultItem, :group_by_geo_distance_result_items, 1
end
class GroupByFilterResultItem < ::Protobuf::Message
  defined_in __FILE__
  optional :int64, :row_count, 1
  optional :AggregationsResult, :sub_aggs_result, 2
  optional :GroupBysResult, :sub_group_bys_result, 3
end
class GroupByFilterResult < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupByFilterResultItem, :group_by_filter_result_items, 1
end
class GroupByResult < ::Protobuf::Message
  defined_in __FILE__
  optional :string, :name, 1
  optional :GroupByType, :type, 2
  optional :bytes, :group_by_result, 3
end
class GroupBysResult < ::Protobuf::Message
  defined_in __FILE__
  repeated :GroupByResult, :group_by_results, 1
end